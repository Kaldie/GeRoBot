# put common definitions in here
#######################################################
#################### Folders ##########################

#Directory with header files
INCLUDEFOLDER = include

#Folder with objects
OBJECTFOLDER = bin/objects

#Folder with shared libs
LIBFOLDER = bin/lib

#######################################################
################# Bash Commands #######################

# current directory
CURRENT_DIR = $(shell pwd)
# remove
RM= rm -rf

# create directory
MKDIR_P = mkdir -p

# create symbolic link
LINK = ln -fsv $(CURRENT_DIR)

# test gen
TESTGEN = cxxtestgen

#######################################################
############ Compiling configuration ##################

#Compiler
CC = g++

#Compiler Flags
CFLAGS = -H -Wall -o0 -g -fno-inline -std=c++11 -fpic -Wfatal-errors

#Compile shared Lib flags
CSHAREDFLAGS = -shared

#Shared lib linking flags
SHAREDLDFLAGS = -Wl,-rpath=$(TOROOT)/$(LIBFOLDER)

#Header files
INCLUDES = -I $(TOROOT)/$(INCLUDEFOLDER)

#Liberary folders
LFLAGS = -L $(TOROOT)/$(LIBFOLDER)

#######################################################
################# Make Targets ########################

#Conversion from source files to object files
OBJS = $(SRCS:.cpp=.o)
DOBJS = $(DSRCS:.cpp=.o)

#Default target, compile all source files
all: $(OBJS)
	@echo "Compiling all object files for this dir!"
	@echo $(OBJS)

#Compile debug source and link it to an executable
debug: $(OBJS) $(DOBJS)
	@echo  "Creating executable for debug purposes"
	$(CC) $(CFLAGS) $(INCLUDES) $(LFLAGS) -o $(DEBUG) $(OBJS) $(DOBJS) $(LFLAGS) $(SHAREDLDFLAGS) $(LIBS)

#Create a shared lib
shared: $(OBJS)
	@echo "creating shared object lib"
	$(CC) $(CFLAGS) $(INCLUDES) -shared -o lib$(MAIN).so $(OBJS) $(LFLAGS) $(SHAREDLDFLAGS) $(LIBS)	
	$(LINK)/lib$(MAIN).so $(TOROOT)/$(LIBFOLDER)/

#Clean folder of object file, libs and other bits and pieces
clean:
	$(RM) *.o
	$(RM) *.so
	$(RM) *$(MAIN)*
	$(RM) $(DEBUG)
	$(RM) $(addprefix $(TOROOT)/$(OBJECTFOLDER)/,$(OBJS))
	$(RM) $(addprefix $(TOROOT)/$(LIBFOLDER)/,*$(MAIN)*)

#How to convert cpp to o files
.cpp.o:
	$(CC) $(CFLAGS) $(INCLUDES) -c $< -o $@
	$(LINK)/$@ $(TOROOT)/$(OBJECTFOLDER)/$@

macroHeader.h.gch: macroHeader.h
	$(CC) $(CFLAGS) $(INCLUDES) -c $< -o $@			
	mv $@ $(TOROOT)/$(INCLUDEFOLDER)/$@

unitTest: $(UnitTests) $(OBJS)
	$(TESTGEN) --error-printer -o $@.cpp $(UnitTests)
	$(CC) $(CFLAGS) $(INCLUDES) $(LFLAGS) -o $@ $@.cpp $(OBJS) $(LFLAGS) $(SHAREDLDFLAGS) $(LIBS)
	./$@

#Got no clue...
depend: $(SRCS)
	makedepend  $(CFLAGS) $(INCLUDES) $^

# DO NOT DELETE THIS LINE -- make depend depends on it. 
  
